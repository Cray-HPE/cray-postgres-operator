{{- /*
MIT License

(C) Copyright 2023 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/}}

# Inject the s3 AWS secret and key into the postgres operator's configuration for logical backups.
# Once the secret is in place, restart the postgres operator and delete any existing logical-backup cronjobs
# so that the operator can re-create the cronjobs at the next sync with the updated secret.

# Wait for the postgresqls crds to get created first (wait-jobs.yaml), then run this job.

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-postgres-operator.fullname" . }}-inject-secret
  annotations:
    helm.sh/hook: post-upgrade,post-install
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  ttlSecondsAfterFinished: 86400
  template:
    metadata:
      name: {{ template "cray-postgres-operator.fullname" . }}-inject-secret
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: {{ template "cray-postgres-operator.fullname" . }}-jobs
      restartPolicy: Never
      containers:
        - name: inject-secrets
          image: {{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          command:
            - '/bin/sh'
          args:
            - "-c"
            - |
               echo "Inject postgres-backup-s3-credentials secret into operatorconfiguration..."
               access_key=$(kubectl get secrets postgres-backup-s3-credentials -n services -ojsonpath='{.data.access_key}' | base64 -d)
               secret_key=$(kubectl get secrets postgres-backup-s3-credentials -n services -ojsonpath='{.data.secret_key}' | base64 -d)
               kubectl patch  operatorconfigurations cray-postgres-operator -n services --type='json' -p='[{"op":"replace", "path":"/configuration/logical_backup/logical_backup_s3_access_key_id", "value":'"${access_key}"'}]'
               kubectl patch  operatorconfigurations cray-postgres-operator -n services --type='json' -p='[{"op":"replace", "path":"/configuration/logical_backup/logical_backup_s3_secret_access_key", "value":'"${secret_key}"'}]'

               echo "Restart the cray-postgres-operator..."
               kubectl delete pod -l app.kubernetes.io/name=postgres-operator -n services

               echo "Delete any logical backup cronjobs so postgres-operator can recreate them on next sync with updated secrets..."
               while read cjob ns; do kubectl delete cronjob ${cjob} -n ${ns} > /dev/null 2>&1; done < <(kubectl get cronjob --no-headers -A | awk '{print $2" "$1}' | grep "^logical-backup")

               echo "Done!"     
